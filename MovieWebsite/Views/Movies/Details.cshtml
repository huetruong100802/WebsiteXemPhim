@using DataAccess.Repository
@using DataAccess.Repository.Interface
@model MovieWebsite.Models.Movies.MovieViewModel
@{
    ViewData["Title"] = Model.Title;
    ViewData["MovieId"] = Model.Id;
    var roles = ViewBag.MovieRoles;
    Layout = "_DetailsLayout";
}
<div>
    <div class="row justify-content-center">
        <h4 class="col-md-2">
            @Html.DisplayFor(model => model.Title)
        </h4>
    </div>
    <hr />
    <div class="row justify-content-between">
        <div class="col-md-3">
            <img decoding="async" src="@("~/image/"+Model.ImageName)" asp-append-version="true" class="movie-cover" />
        </div>
        <div class="col-md-7">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Rating)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Rating) || @Model.Rates?.Count() lượt đánh giá
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Statuses)
                </dt>
                <dd class="col-sm-8 text-danger">
                    @if (Model.Statuses is not null)
                    {
                        @string.Join(" ", Model.Statuses.ToList())
                    }
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Genres)
                </dt>
                <dd class="col-sm-8">
                    @if (Model.Genres is not null)
                    {
                        @string.Join(", ", Model.Genres.ToList())
                    }
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.ReleaseYear)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.ReleaseYear)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Duration)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Duration)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Nation)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Nation)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Views)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Views)
                </dd>
                @foreach (Role role in roles)
                {
                    <dt class="col-sm-4">@role.Name</dt>
                    <dd class="col-sm-8">
                        @{
                            var nameList = new List<string>();
                            foreach (var people in Model.MoviePeople!)
                            {
                                if (people.RoleId == role.Id)
                                {
                                    nameList.Add(people.People.Name);
                                }
                            }
                        }
                        @string.Join(", ",nameList)
                    </dd>
                }
            </dl>
        </div>
    </div>
</div>
@if (User.IsInRole(Roles.SuperAdmin.ToString()))
{
    <div class="btn-group-sm">
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.Id" role="button">Edit</a>
        <a class="btn btn-secondary" asp-action="Index" role="button">Back to List</a>
        <a class="btn btn-info" asp-action="Index" asp-controller="Episodes" asp-route-id="@Model!.Id" role="button">Manage episodes</a>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                @Html.DisplayNameFor(model=>model.Episodes)
            </div>
            <partial name="Partials/_EpisodeList" model="Model?.Episodes" />
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                @Html.DisplayNameFor(model=>model.Description)
            </div>
            <div class="card-body">
                @if (Model?.Description is null)
                {
                    <p class="card-text">N/A</p>
                }
                else
                {
                    <p class="card-text">@Html.DisplayFor(model=>model.Description)</p>
                }
            </div>
        </div>
    </div>
</div>